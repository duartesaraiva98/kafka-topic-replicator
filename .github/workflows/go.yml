# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: 
  push:
    branches:
    - 'main'
    tags:
    - '*'

jobs:

  build:
    runs-on: ubuntu-22.04
    container:
      image: golang:1.21.1
      options: --user 1001
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: Build linux-amd64
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 1
      run: go build -C src -v -o target/kafka-topic-replicator-$GOOS-$GOARCH

    # - name: Get current directory
    #   run: echo "DIR=$(pwd)" >> "$GITHUB_ENV"

    # - name: Get arm64 cross-compiler
    #   run: wget -P $DIR/cc https://musl.cc/aarch64-linux-musl-cross.tgz && tar -xvf $DIR/cc/aarch64-linux-musl-cross.tgz -C $DIR/cc 

    - name: Install C cross compiler for arm64
      run: apt install gcc-aarch64-linux-gnu

    - name: Build linux-arm64
      env:
        GOOS: linux
        GOARCH: arm64
        CGO_ENABLED: 1
        CC: gcc-aarch64-linux-gnu
      run: go build -C src -v -o target/kafka-topic-replicator-$GOOS-$GOARCH

    - name: Print all that will be released
      run: ls src/target

    # - name: Creating a release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: "src/target/*"
